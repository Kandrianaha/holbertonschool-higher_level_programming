The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------


First import ``matrix_divided`` from the ``2-matrix_divided`` file:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests:
# Normal case
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test with floats
>>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], 2)
[[0.75, 1.25], [1.75, 2.25]]

# Test with negative divisor
>>> matrix_divided([[1, 2], [3, 4]], -2)
[[-0.5, -1.0], [-1.5, -2.0]]

# Test with unequal row sizes
>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Test with invalid matrix element
>>> matrix_divided([[1, "two"], [3, 4]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test with invalid divisor
>>> matrix_divided([[1, 2], [3, 4]], "two")
Traceback (most recent call last):
...
TypeError: div must be a number

# Test division by zero
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
